steps:
  # Paso 1: Construir imagen Docker
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '.'

  # Paso 2: Subir imagen al Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'

  # Paso 3: Desplegar a Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image'
      - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '80'
      - '--memory'
      - '${_MEMORY}'
      - '--cpu'
      - '${_CPU}'
      - '--max-instances'
      - '${_MAX_INSTANCES}'
      - '--min-instances'
      - '${_MIN_INSTANCES}'
      - '--set-env-vars'
      - 'NODE_ENV=production,ANGULAR_ENV=production'

# Imágenes generadas
images:
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:${COMMIT_SHA}'
  - 'gcr.io/$PROJECT_ID/${_SERVICE_NAME}:latest'

# Tiempo máximo de build
timeout: '1200s'

# Configuración opcional del builder
options:
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

# Variables personalizadas
substitutions:
  _REGION: 'us-central1'
  _SERVICE_NAME: 'pokemon-trainer-app'
  _MEMORY: '512Mi'
  _CPU: '1'
  _MAX_INSTANCES: '10'
  _MIN_INSTANCES: '0'
