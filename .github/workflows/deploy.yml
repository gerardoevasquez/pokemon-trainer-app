name: Deploy to Google Cloud Platform

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-east1

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run tests
      run: npm test -- --watch=false --browsers=ChromeHeadless
    
    - name: Build application
      run: npm run build

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker
    
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app-staging:${{ github.sha }} .
        docker push gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app-staging:${{ github.sha }}
    
    - name: Deploy to Cloud Run (Staging)
      run: |
        gcloud run deploy pokemon-trainer-app-staging \
          --image gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app-staging:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 80 \
          --memory 256Mi \
          --cpu 1 \
          --max-instances 5 \
          --min-instances 0 \
          --set-env-vars NODE_ENV=staging,ANGULAR_ENV=staging

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Configure Docker for GCR
      run: gcloud auth configure-docker
    
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app:${{ github.sha }} .
        docker tag gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app:${{ github.sha }} gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app:latest
        docker push gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app:${{ github.sha }}
        docker push gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app:latest
    
    - name: Deploy to Cloud Run (Production)
      run: |
        gcloud run deploy pokemon-trainer-app \
          --image gcr.io/${{ env.PROJECT_ID }}/pokemon-trainer-app:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 80 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 10 \
          --min-instances 0 \
          --set-env-vars NODE_ENV=production,ANGULAR_ENV=production
    
    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe pokemon-trainer-app --region=${{ env.REGION }} --format="value(status.url)")
        echo "Production service deployed at: $SERVICE_URL" 