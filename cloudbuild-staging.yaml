steps:
  # Build the Docker image for staging
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/pokemon-trainer-app-staging:$COMMIT_SHA', '.']
    
  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pokemon-trainer-app-staging:$COMMIT_SHA']
    
  # Deploy to Cloud Run (Staging)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'pokemon-trainer-app-staging'
      - '--image'
      - 'gcr.io/$PROJECT_ID/pokemon-trainer-app-staging:$COMMIT_SHA'
      - '--region'
      - 'us-east1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '80'
      - '--memory'
      - '256Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'
      - '--min-instances'
      - '0'
      - '--set-env-vars'
      - 'NODE_ENV=staging'
      - '--set-env-vars'
      - 'ANGULAR_ENV=staging'
      - '--set-env-vars'
      - 'API_URL=https://pokeapi.co/api/v2'

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/pokemon-trainer-app-staging:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/pokemon-trainer-app-staging:latest'

# Build timeout
timeout: '900s'

# Machine type for staging builds
options:
  machineType: 'E2_HIGHCPU_4'
  logging: CLOUD_LOGGING_ONLY

# Substitutions for staging environment
substitutions:
  _REGION: 'us-east1'
  _SERVICE_NAME: 'pokemon-trainer-app-staging'
  _MEMORY: '256Mi'
  _CPU: '1'
  _MAX_INSTANCES: '5'
  _MIN_INSTANCES: '0' 