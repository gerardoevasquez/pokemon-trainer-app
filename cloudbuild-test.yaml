steps:
  # Install dependencies
  - name: 'node:20-alpine'
    entrypoint: npm
    args: ['ci']
    
  # Run linting
  - name: 'node:20-alpine'
    entrypoint: npm
    args: ['run', 'lint']
    
  # Run tests
  - name: 'node:20-alpine'
    entrypoint: npm
    args: ['test', '--watch=false', '--browsers=ChromeHeadless']
    
  # Build the application for testing
  - name: 'node:20-alpine'
    entrypoint: npm
    args: ['run', 'build']
    
  # Build the Docker image for testing
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/pokemon-trainer-app-test:$COMMIT_SHA', '.']
    
  # Push the Docker image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pokemon-trainer-app-test:$COMMIT_SHA']
    
  # Deploy to Cloud Run (Test Environment)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'pokemon-trainer-app-test'
      - '--image'
      - 'gcr.io/$PROJECT_ID/pokemon-trainer-app-test:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '80'
      - '--memory'
      - '256Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '1'
      - '--min-instances'
      - '0'
      - '--set-env-vars'
      - 'NODE_ENV=test'
      - '--set-env-vars'
      - 'ANGULAR_ENV=test'
      - '--set-env-vars'
      - 'API_URL=https://pokeapi.co/api/v2'

# Store images in Google Container Registry
images:
  - 'gcr.io/$PROJECT_ID/pokemon-trainer-app-test:$COMMIT_SHA'

# Build timeout
timeout: '1800s'

# Machine type for test builds
options:
  machineType: 'E2_HIGHCPU_4'

# Substitutions for test environment
substitutions:
  _REGION: 'us-central1'
  _SERVICE_NAME: 'pokemon-trainer-app-test'
  _MEMORY: '256Mi'
  _CPU: '1'
  _MAX_INSTANCES: '1'
  _MIN_INSTANCES: '0' 